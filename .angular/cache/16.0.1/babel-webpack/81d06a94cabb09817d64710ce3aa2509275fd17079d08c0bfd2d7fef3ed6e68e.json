{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/luisc/Desktop/clase/Ionic/Moviesostenible/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { r as registerInstance, h, H as Host, e as getElement, c as createEvent } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { a as attachComponent } from './framework-delegate-c2e2e1f4.js';\nconst Tab = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n    this.active = false;\n  }\n  componentWillLoad() {}\n  /** Set the active component for the tab */\n  setActive() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.prepareLazyLoaded();\n      _this.active = true;\n    })();\n  }\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    return Promise.resolve(undefined);\n  }\n  render() {\n    const {\n      tab,\n      active,\n      component\n    } = this;\n    return h(Host, {\n      role: \"tabpanel\",\n      \"aria-hidden\": !active ? 'true' : null,\n      \"aria-labelledby\": `tab-button-${tab}`,\n      class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active\n      }\n    }, h(\"slot\", null));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get style() {\n    return \":host(.tab-hidden){display:none!important}\";\n  }\n};\nconst Tabs = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.transitioning = false;\n    /** @internal */\n    this.useRouter = false;\n    this.onTabClicked = ev => {\n      const {\n        href,\n        tab\n      } = ev.detail;\n      if (this.useRouter && href !== undefined) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n          router.push(href);\n        }\n      } else {\n        this.select(tab);\n      }\n    };\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n  }\n  componentWillLoad() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this2.useRouter) {\n        _this2.useRouter = !!document.querySelector('ion-router') && !_this2.el.closest('[no-router]');\n      }\n      if (!_this2.useRouter) {\n        const tabs = _this2.tabs;\n        yield _this2.select(tabs[0]);\n      }\n      _this2.ionNavWillLoad.emit();\n    })();\n  }\n  componentWillRender() {\n    const tabBar = this.el.querySelector('ion-tab-bar');\n    if (tabBar) {\n      const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  }\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  select(tab) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const selectedTab = getTab(_this3.tabs, tab);\n      if (!_this3.shouldSwitch(selectedTab)) {\n        return false;\n      }\n      yield _this3.setActive(selectedTab);\n      yield _this3.notifyRouter();\n      _this3.tabSwitch();\n      return true;\n    })();\n  }\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n  getTab(tab) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return getTab(_this4.tabs, tab);\n    })();\n  }\n  /**\n   * Get the currently selected tab.\n   */\n  getSelected() {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  }\n  /** @internal */\n  setRouteId(id) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const selectedTab = getTab(_this5.tabs, id);\n      if (!_this5.shouldSwitch(selectedTab)) {\n        return {\n          changed: false,\n          element: _this5.selectedTab\n        };\n      }\n      yield _this5.setActive(selectedTab);\n      return {\n        changed: true,\n        element: _this5.selectedTab,\n        markVisible: () => _this5.tabSwitch()\n      };\n    })();\n  }\n  /** @internal */\n  getRouteId() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const tabId = _this6.selectedTab && _this6.selectedTab.tab;\n      return tabId !== undefined ? {\n        id: tabId,\n        element: _this6.selectedTab\n      } : undefined;\n    })();\n  }\n  setActive(selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({\n      tab: selectedTab.tab\n    });\n    return selectedTab.setActive();\n  }\n  tabSwitch() {\n    const selectedTab = this.selectedTab;\n    const leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n    if (!selectedTab) {\n      return;\n    }\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n      this.ionTabsDidChange.emit({\n        tab: selectedTab.tab\n      });\n    }\n  }\n  notifyRouter() {\n    if (this.useRouter) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n    return Promise.resolve(false);\n  }\n  shouldSwitch(selectedTab) {\n    const leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  }\n  get tabs() {\n    return Array.from(this.el.querySelectorAll('ion-tab'));\n  }\n  render() {\n    return h(Host, {\n      onIonTabButtonClick: this.onTabClicked\n    }, h(\"slot\", {\n      name: \"top\"\n    }), h(\"div\", {\n      class: \"tabs-inner\"\n    }, h(\"slot\", null)), h(\"slot\", {\n      name: \"bottom\"\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get style() {\n    return \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;z-index:0}.tabs-inner,:host{contain:layout size style}.tabs-inner{position:relative;-ms-flex:1;flex:1}\";\n  }\n};\nconst getTab = (tabs, tab) => {\n  const tabEl = typeof tab === 'string' ? tabs.find(t => t.tab === tab) : tab;\n  if (!tabEl) {\n    console.error(`tab with id: \"${tabEl}\" does not exist`);\n  }\n  return tabEl;\n};\nexport { Tab as ion_tab, Tabs as ion_tabs };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
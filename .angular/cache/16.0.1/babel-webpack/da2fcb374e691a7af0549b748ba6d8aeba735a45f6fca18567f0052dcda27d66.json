{"ast":null,"code":"import { r as registerInstance, c as createEvent, h, d as getIonMode, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if ('IntersectionObserver' in window) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    } else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"img\", {\n      decoding: \"async\",\n      src: this.loadSrc,\n      alt: this.alt,\n      onLoad: this.onLoad,\n      onError: this.loadError\n    }));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"src\": [\"srcChanged\"]\n    };\n  }\n  static get style() {\n    return \":host{-o-object-fit:contain;object-fit:contain}:host,img{display:block}img{width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n  }\n};\nexport { Img as ion_img };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}